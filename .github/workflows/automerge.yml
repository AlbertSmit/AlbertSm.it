name: AutoMerge

on:
  push:
    branches:
      - develop

jobs:
  automerge:
    name: "AutoMerge™"
    if: startsWith(github.event.head_commit.message, 'AutoMerge:')
    runs-on: "ubuntu-latest"
    steps:
      - name: "Create AutoMerge™ PR"
        uses: "actions/github-script@v2"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const repository = context.repo
            await github.pulls.create({
              owner: repository.owner,
              repo: repository.repo,
              title: "AutoMerge™",
              head: "develop",
              base: "master",
              body: "Automatically merged through AutoMerge™ by Github Actions. :rocket:"
            })

      - name: "Find PR"
        uses: juliangruber/find-pull-request-action@v1
        id: find-pr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: develop

      - name: "Label PR"
        uses: "actions/github-script@v2"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const repository = context.repo
            await github.issues.addLabels({
              owner: repository.owner,
              repo: repository.repo,
              issue_number: ${{ steps.find-pr.outputs.number }},
              labels: ["AutoMerge™ :rocket:"]
            });

      - name: "Merge AutoMerge™ PR"
        uses: "actions/github-script@v2"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const repository = context.repo
            await github.pulls.merge({
              merge_method: "merge",
              owner: repository.owner,
              pull_number: ${{ steps.find-pr.outputs.number }},
              repo: repository.repo,
            })

  deploy:
    needs: automerge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup Node.js
        uses: actions/setup-node@v3.8.2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Build
        run: |
          npm ci
          npm run build

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          ftp-server: ${{ secrets.FTP }}
          ftp-username: ${{ secrets.FTP_USER }}
          ftp-password: ${{ secrets.FTP_PW }}
          local-dir: build
